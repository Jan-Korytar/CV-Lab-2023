Environment settings:
- Create conda environment: conda env create -f environment.yml
- Activation: conda activate cvlab_pix2pix

Dataset:
- integrals_groundtruths.7z         includes training dataset and test ground truth images
    - download link (11.35 GB): https://mega.nz/file/fpg2TbiL#f-59mVjWQYvMUagsJCqrBrfB7tbBZwpBsZLfjxSW7mQ
    - extract into the code folder
    - integrals/                    our integral images
    - groundtruths/                 provided ground truth images

Test set:
- test_set.7z                       includes test set (5500 images from Part1 of batch_20230919)
    - download link:
    - extract into the code folder
    - includes horizontally combined images that our model can accept and have never seen

Trained model weights:
- weights/                          includes our best model checkpoints
    - download link (202.6 MB): https://mega.nz/file/i5ZQnSpZ#nGKaKbboz4B0kRqC8CKohcW43GEyg-2xqTBxx3ixnv4
    - extract into the code folder
    - latest_250_G.pth              generator model checkpoint at epoch 250
    - latest_250_D.pth              discriminator model checkpoint at epoch 250

Core folder contents:
- integrator.py                     integrates simulated dataset to our focal length
- preprocessor.py                   preprocesses integrated and ground truth images for pix2pix accceptable format
- train.py                          runs the training and saves results in checkpoints folder
- test.py                           runs our pretrained model on three integrals with focal stack [-0.1, -0.8, -1.6] and saves results in "test_results" folder, see generated folders info below
- evaluate.py                       runs our pretrained model on test set, and calculates average SSIM score on all of them
- pytorch-CycleGAN-and-pix2pix/     a clone of our fork https://github.com/kristofmaar/pytorch-CycleGAN-and-pix2pix/

Generated folders:
- checkpoints/                      includes model that was trained by train.py
    - latest_net_G.pth              latest generator model checkpoint
    - latest_net_D.pth              latest discriminator model checkpoint
    - loss_log.txt                  log of losses during training
    - train_opt.txt                 export of training options
- test_results/weights/test_250     test results that are generated by test.py
    - images/                       includes pretrained model output
        - combined_image_fake.png   output of the model (restored image)
        - combined_image_real.png   input of the model
    - index.html                    openable frontend for test results